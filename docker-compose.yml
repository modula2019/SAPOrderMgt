version: "3.7"
services:
  # node:
  #   image: "node:latest"
  #   user: "node"
  #   working_dir: /home/node/app
  #   environment:
  #     - NODE_ENV=development
  #   volumes:
  #     - ./:/home/node/app
  #   ports:
  #     - "8080:8080"
  #   command: "npm start"
  #   links:
  #     - postgres

  #Node Service
  webserver:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        NODE_ENV: development
    container_name: webserver
    restart: unless-stopped
    tty: true
    environment:
      - NODE_ENV=development
    # command:
    #   - /bin/sh
    #   - -c
    #   #   - cd ordermgt-api
    #   #     npm install --quiet
    #   - adonis serve --dev
    # volumes:
    #   - .:/application
    #   - ./docker/nginx/example.com+5.pem:/etc/nginx/example.com+5.pem
    #   - ./docker/nginx/example.com+5-key.pem:/etc/nginx/example.com+5-key.pem
    #   - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "3333:80"
      - "443:443"
    networks:
      - app-network

  # #Postgres Service
  # db:
  #   build: docker/postgres
  #   container_name: "db"
  #   restart: always
  #   ports:
  #     - "32768:5432"
  #   environment:
  #     - POSTGRES_MULTIPLE_DATABASES=erp,erp_testing
  #     - POSTGRES_USER=docker_erp_user
  #     - POSTGRES_PASSWORD=docker_erp_password
  #   volumes:
  #     - my_dbdata:/var/lib/postgresql/
  #   networks:
  #     - app-network
  #Docker Networks
networks:
  app-network:
    driver: bridge

#Volumes
volumes:
  my_dbdata:
    driver: local
